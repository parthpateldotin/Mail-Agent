openapi: 3.0.0
info:
  title: AiMail API
  version: 1.0.0
  description: |
    AiMail API provides endpoints for managing email processing, agent control, and system monitoring.
    
    ## Features
    - Email processing and management
    - Agent control and monitoring
    - System metrics and performance monitoring
    - Error tracking and logging

servers:
  - url: /api/v1
    description: Default server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    AgentStatus:
      type: string
      enum: [idle, running, paused, error, maintenance]

    AgentState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AgentStatus'
        metrics:
          type: object
          properties:
            emailsProcessed:
              type: number
            successRate:
              type: number
            averageProcessingTime:
              type: number
            errorRate:
              type: number
            queueSize:
              type: number
        settings:
          $ref: '#/components/schemas/AgentSettings'
        version:
          type: string
        uptime:
          type: number
        healthStatus:
          type: object
          properties:
            database:
              type: boolean
            emailService:
              type: boolean
            llmService:
              type: boolean
            diskSpace:
              type: boolean

    AgentSettings:
      type: object
      properties:
        maxConcurrentProcessing:
          type: number
          minimum: 1
          maximum: 20
        processingTimeout:
          type: number
          minimum: 5000
          maximum: 300000
        retryAttempts:
          type: number
          minimum: 0
          maximum: 10
        retryDelay:
          type: number
          minimum: 1000
          maximum: 60000
        pollingInterval:
          type: number
          minimum: 10000
          maximum: 300000
        enabledFeatures:
          type: array
          items:
            type: string
            enum: [email_processing, spam_detection, auto_response]
        llmSettings:
          type: object
          properties:
            model:
              type: string
              enum: [gpt-4, gpt-3.5-turbo]
            temperature:
              type: number
              minimum: 0
              maximum: 1
            maxTokens:
              type: number
              minimum: 100
              maximum: 4000
        emailSettings:
          type: object
          properties:
            maxAttachmentSize:
              type: number
            allowedMimeTypes:
              type: array
              items:
                type: string
            spamThreshold:
              type: number
              minimum: 0
              maximum: 1

    SystemMetrics:
      type: object
      properties:
        current:
          type: object
          properties:
            cpu:
              type: object
              properties:
                usage:
                  type: number
                loadAvg:
                  type: array
                  items:
                    type: number
                cores:
                  type: number
            memory:
              type: object
              properties:
                total:
                  type: number
                used:
                  type: number
                free:
                  type: number
                heapUsed:
                  type: number
                heapTotal:
                  type: number
            disk:
              type: object
              properties:
                total:
                  type: number
                free:
                  type: number
                used:
                  type: number
            network:
              type: object
              properties:
                connections:
                  type: number
                bytesReceived:
                  type: number
                bytesSent:
                  type: number
            process:
              type: object
              properties:
                uptime:
                  type: number
                pid:
                  type: number
                threadCount:
                  type: number
                handlesOpen:
                  type: number
        history:
          type: array
          items:
            $ref: '#/components/schemas/SystemMetrics/properties/current'

paths:
  /agent/status:
    get:
      summary: Get agent status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Agent status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentState'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /agent/start:
    post:
      summary: Start the agent
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Agent started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentState'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /agent/stop:
    post:
      summary: Stop the agent
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Agent stopped successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentState'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /agent/settings:
    put:
      summary: Update agent settings
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSettings'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSettings'
        '400':
          description: Invalid settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /monitor/metrics:
    get:
      summary: Get system metrics
      security:
        - bearerAuth: []
      parameters:
        - name: hours
          in: query
          schema:
            type: integer
            default: 24
          description: Number of hours of history to retrieve
      responses:
        '200':
          description: System metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetrics'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /monitor/performance:
    get:
      summary: Get performance metrics
      security:
        - bearerAuth: []
      parameters:
        - name: hours
          in: query
          schema:
            type: integer
            default: 24
          description: Number of hours of history to retrieve
      responses:
        '200':
          description: Performance metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseTime:
                    type: object
                    properties:
                      avg:
                        type: number
                      p95:
                        type: number
                      p99:
                        type: number
                  throughput:
                    type: object
                    properties:
                      requestsPerSecond:
                        type: number
                      successRate:
                        type: number
                      errorRate:
                        type: number
                  database:
                    type: object
                    properties:
                      connectionPool:
                        type: number
                      activeQueries:
                        type: number
                      queryLatency:
                        type: number
                  cache:
                    type: object
                    properties:
                      hitRate:
                        type: number
                      missRate:
                        type: number
                      size:
                        type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /monitor/errors:
    get:
      summary: Get error statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Error statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                  categories:
                    type: object
                    additionalProperties:
                      type: number
                  recent:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        code:
                          type: string
                        message:
                          type: string
                        stack:
                          type: string
                  trends:
                    type: object
                    properties:
                      hourly:
                        type: array
                        items:
                          type: number
                      daily:
                        type: array
                        items:
                          type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /monitor/logs:
    get:
      summary: Get application logs
      security:
        - bearerAuth: []
      parameters:
        - name: level
          in: query
          schema:
            type: string
            enum: [error, warn, info, debug]
          description: Log level filter
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
          description: Maximum number of logs to retrieve
      responses:
        '200':
          description: Logs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    level:
                      type: string
                    message:
                      type: string
                    metadata:
                      type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 